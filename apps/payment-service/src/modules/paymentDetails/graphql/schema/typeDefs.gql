scalar Date
type Query
type Mutation

type PaymentDetails {
	id: String!
	email: String!
	amountMoney: Float!
	paymentMethod: PaymentMethod!
	paymentDate: Date!
	reference: String!
	paymentStatus: PaymentStatus!
	createdAt: Date!
}

enum PaymentMethod {
	STRIPE
	MOBILEPAY
	BANK_TRANSFER
	MANUAL
}

enum PaymentStatus {
	PENDING
	COMPLETED
	FAILED
	REFUNDED
}

input CreatePaymentInput {
	email: String!
	purchaseAmount: Float!
	method: PaymentMethod!
	reference: String!
}

input ChangeStatusInput {
	id: String!
	status: PaymentStatus!
}

type Mutation {
	createPayment(input: CreatePaymentInput!): PaymentDetails!
	changeStatus(input: ChangeStatusInput!): PaymentDetails!
}

type Query {
	allPayments: [PaymentDetails!]!
}
